Imports System
Imports System.Data
Imports System.Windows.Forms

Public Class frmLogin
   Dim dsUser As New DataSet
    Dim ds As New DataSet
    Dim intentos As Integer
    Public Seguridad As New Seguridad.EncriptarClave
    'Dim bolModulo As Boolean

    Private Sub frmLogin_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles Me.KeyDown
        If e.KeyData = Keys.Enter Then
            SendKeys.Send("{TAB}")
        End If
    End Sub

    'Procedimiento de Carga de Forma frmLogin que pide el login y password al usuario
    'Revisa las variables del sistema para ver si hay que poner valores que el usuario
    'había pedido recordar como el usuario, la clave y el valor de recordar la clave
    'para ponerla al cargar la forma, también pone el valor de recordar el usuario
    'cada vez que se abra la forma de login, para luego solo poner el password 
    'Fecha       :    23 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Procedimiento de Carga de forma frmLogin.vb.
    'Tipo Objeto :    Form.
    'Nombre      :    frmLogin.vb.
    'Base        :    FACTURA_TIENDA.
    'Tablas      :    Este procedimiento no toca ninguna tabla.

    Private Sub frmLogin_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Try
            Me.txtUsuario.Text = GetSetting(Application.ProductName, "Login", "Usuario", "") 'Pone el usuario en variables del sistema
            If GetSetting(Application.ProductName, "Login", "Clave", "").ToString.Length > 0 Then
                Me.txtPassword.Text = GetSetting(Application.ProductName, "Login", "Clave", "") 'Pone la clave en variables del sistema
            End If
            If GetSetting(Application.ProductName, "Login", "Recordar", "") = "Si" Then
                Me.chkRecordarClave.Checked = IIf(GetSetting(Application.ProductName, "Login", "RecordarClave", "") = "Si", True, False)
                Me.chkRecordar.Checked = True 'Pone si la última vez deseo recordar el usuario y clave
                Me.txtPassword.Focus()
            Else
                Me.chkRecordar.Checked = False 'No lo deseo recordar
                Me.txtUsuario.Focus()
            End If
            intentos = 0
            EmpresasPorUsuario() 'LLena el combo de Empresas para escoger la empresa
            Me.txtPassword.Focus()
            '--
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub

    'Fecha       :    23 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Procedimiento de Carga de forma frmLogin.vb.
    'Tipo Objeto :    Form.
    'Nombre      :    frmLogin.vb.
    'Base        :    FACTURA_TIENDA.
    'Tablas      :    Gen_Usuarios.

    Private Sub btnOk_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnOk.Click

        If Len(Trim(Me.cbEmpresa.Text)) Then 'Si escogió una empresa
            strSQL = String.Format("SELECT * FROM Gen_Usuarios WHERE strData = '{0}'", strUser)
            dsUser = funFillDataSet(strSQL)

            If dsUser.Tables(0).Rows.Count = 0 Then 'El usuario no existe
                MsgBox("Usuario no existe", MsgBoxStyle.Critical)
                Me.txtPassword.Focus() 'Pone el enfoque en el txtPassword
                Me.txtPassword.Text = ""
                Me.txtPassword.SelectAll()
                intentos += 1
                If intentos >= 10 Then 'Si ha hecho mas de 10 intentos cierra la forma.
                    MsgBox("Intentos fallidos...", MsgBoxStyle.Information, "Intentos fallidos...")
                    Me.Close()
                End If
                Exit Sub
            End If

            With dsUser.Tables(0).Rows(0) 'Con el registro que encontró.
                Dim strClave As String = funCTxt(Me.txtPassword.Text)
                Dim strClaveBase As String = .Item("strPassword").ToString

                If Len(Trim(strClaveBase)) = 0 Then 'Si strClaveBase está vacía debe cambiar la contraseña
                    MsgBox("Debe cambiar su contraseña", MsgBoxStyle.Information, "Cambiar contraseña")
                    Dim f As New frmCambiarPassword
                    f.txtUsuario.Text = strUser
                    f.txtUsuario.ReadOnly = True
                    f.txtUsuario.BackColor = Color.White
                    f.ShowDialog() 'Muestra la forma de Cambiar password para el cambio.
                ElseIf Len(Trim(strClave)) = 0 Then 'Tiene que meter su contraseña porque no la metió.
                    MsgBox("Escriba su contraseña", MsgBoxStyle.Critical)
                    Me.txtPassword.Focus()
                    Me.txtPassword.Text = ""
                    Me.txtPassword.SelectAll()
                ElseIf .Item("strPassword").ToString <> Seguridad.GenerateHashDigest(strClave) Then 'No coincide la clave
                    MsgBox("Contraseña incorrecta", MsgBoxStyle.Critical)                           'porque es incorrecta
                    Me.txtPassword.Focus()
                    Me.txtPassword.Text = ""
                    Me.txtPassword.SelectAll()
                    Exit Sub
                Else 'Coincidió la contraseña con la base de datos
                    funDatosGenerales() 'Pone el usuario activo dentro de la empresa
                    If nUserID = 68 Then ' El 68 es usuario admin
                        funSaveSettings()
                    End If
                    'Variables para ok del program
                    bolLogin = True
                    Me.Close()
                End If
            End With
            '--
        End If
    End Sub


    'Guarda los datos del usuario como el usuario, la clave.
    'el recordar clave, sino esta chequeado el Recordar, no las guarda.
    'Fecha       :    23 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Procedimiento de Carga de forma frmLogin.vb.
    'Tipo Objeto :    Form.
    'Nombre      :    frmLogin.vb.
    'Base        :    FACTURA_TIENDA.
    'Tablas      :    Ninguna.

    Function funSaveSettings()
        '--
        Try
            nUserID = dsUser.Tables(0).Rows(0).Item("nCode")
            '--
            If Me.chkRecordar.Checked = True Then 'Tiene que recordar, guarda las variables.
                SaveSetting(Application.ProductName, "Login", "Usuario", funCTxt(Me.txtUsuario.Text))
                SaveSetting(Application.ProductName, "Login", "Recordar", "Si")
                '-- Recordar la contraseña
                If Me.chkRecordarClave.Checked = True Then
                    SaveSetting(Application.ProductName, "Login", "Clave", funCTxt(Me.txtPassword.Text))
                    SaveSetting(Application.ProductName, "Login", "RecordarClave", "Si")
                Else
                    SaveSetting(Application.ProductName, "Login", "Clave", "")
                    SaveSetting(Application.ProductName, "Login", "RecordarClave", "No")
                End If
            Else 'No las tiene que recordar, no guarda las variables.
                SaveSetting(Application.ProductName, "Login", "Usuario", "")
                SaveSetting(Application.ProductName, "Login", "Recordar", "No")
                SaveSetting(Application.ProductName, "Login", "Clave", "")
                SaveSetting(Application.ProductName, "Login", "RecordarClave", "No")
            End If
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
        '--
        Return True
    End Function

    Private Sub btnExit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnExit.Click
        Me.Close()
    End Sub

    Private Sub txtUsuario_Leave(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtUsuario.Leave
        EmpresasPorUsuario()
    End Sub

    Private Sub chkRecordar_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkRecordar.CheckedChanged
        If Me.chkRecordar.Checked = False Then
            Me.chkRecordarClave.Checked = False
        End If
    End Sub

    Private Sub chkRecordarClave_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkRecordarClave.CheckedChanged
        If Me.chkRecordarClave.Checked = True Then
            Me.chkRecordar.Checked = True
        End If
    End Sub


    'Poner en activo la sesion del usuario en la empresa
    'y obtiene el nombre de la empresa y lo pone en la variable EmpresaNombre
    'Fecha       :    23 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Procedimiento de Carga de forma frmLogin.vb.
    'Tipo Objeto :    Form.
    'Nombre      :    frmLogin.vb.
    'Base        :    FACTURA_TIENDA.
    'Tablas      :    Gen_UsuariosEmpresas,Gen_Empresas.

    Private Sub funDatosGenerales()

        intEmpresa = Me.cbEmpresa.SelectedValue
        'Desactivamos los registros del usuario
        strSQL = "UPDATE Gen_UsuariosEmpresas SET nActiva = 0 " & _
                 "WHERE nUserID = " & nUserID
        '--
        funRunSQL(strSQL)

        'Activamos el registro del usuario actual
        strSQL = "UPDATE Gen_UsuariosEmpresas SET nActiva = 1 " & _
                 "WHERE nUserID = " & nUserID & _
                 "AND nEmpresa = " & intEmpresa
        '--
        funRunSQL(strSQL)

        'Obtenemos el Nombre de la Empresa
        strSQL = "SELECT gu.nEmpresa,ge.STRNOMBRE AS Nombre, ge.* " &
                "FROM GEN_USUARIOSEMPRESAS gu " &
                "INNER JOIN Gen_Empresas ge ON gu.nEmpresa = ge.NCODE " &
                "WHERE gu.nActiva = 1 And gu.nUserID = " & nUserID
        ds = funFillDataSet(strSQL)
        EmpresaNombre = ds.Tables(0).Rows(0).Item("Nombre")
    End Sub

    'Toma el numero de Empresa y el nombre de la empresa
    'donde la empresa este activa, es decir a que empresas
    'tiene el derecho el usuario.
    'Además llena el combo de empresas con derechos del usuario 
    'para que este escoja con cuál quiere trabajar.
    'Fecha       :    23 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Procedimiento de Carga de forma frmLogin.vb.
    'Tipo Objeto :    Form.
    'Nombre      :    frmLogin.vb.
    'Base        :    FACTURA_TIENDA.
    'Tablas      :    GEN_USUARIOSEMPRESAS, GEN_EMPRESAS.

    Private Sub EmpresasPorUsuario()
        Try
            strUser = funCTxt(Me.txtUsuario.Text)
            '--
            strSQL = String.Format("SELECT NCODE FROM Gen_Usuarios WHERE strData= '{0}'", strUser)
            nUserID = funGetValor(strSQL)
            '--
            strSQL = "SELECT gu.nEmpresa AS Codigo,ge.strNombre AS Nombre, ge.* " & _
                    "FROM GEN_USUARIOSEMPRESAS gu " & _
                    "INNER JOIN GEN_EMPRESAS ge ON gu.nEmpresa = ge.NCODE " & _
                    "WHERE gu.nActiva = 1 And gu.nUserID = " & nUserID

            ds = funFillDataSet(strSQL)
            If ds.Tables(0).Rows.Count = 0 Then 'Si no tiene derecho a alguna empresa.
            Else
                intEmpresa = ds.Tables(0).Rows(0).Item("Codigo") 'Guarda a que empresa tiene derecho.
            End If

            strSQL = "SELECT gu.nEmpresa AS Codigo, ge.STRNOMBRE AS NOMBRE, gu.nActiva " & _
                     "FROM GEN_USUARIOSEMPRESAS gu " & _
                     "INNER JOIN GEN_EMPRESAS ge ON gu.nEmpresa = ge.NCODE AND gu.nUserID = " & nUserID & " " & _
                     "WHERE gu.nAsignada = 1"


            'LLena el combo de empresas a las que tiene derecho el usuario          
            Me.cbEmpresa.DataSource = funFillDataSet(strSQL).Tables(0)
            Me.cbEmpresa.ValueMember = "Codigo"
            Me.cbEmpresa.DisplayMember = "Nombre"
            Me.cbEmpresa.SelectedValue = intEmpresa 'El valor que va a enviar al boton de login para ver sobre que empresa
            'va a trabajar en la forma frmMain.vb 


        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub


End Class
