Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Drawing
Imports System.Linq
Imports System.Text
Imports System.Threading.Tasks
Imports System.Windows.Forms
Imports System.Net.Http

Imports Newtonsoft.Json

Public Class Form1

    Private Async Sub EnviarTiquetes()

        'Toma los tiquetes de la vista vw_FE_Control que toma los tiquetes de la base 
        'LDCOM_MUNDOMAGICO. Modifica la tabla GB_Control_FE pone campo estado = 1 para 
        'poner que este está en proceso de transmisión.
        'La vista vw_FE_Control y la tabla GB_Control_FE son uno a uno, por cada registro
        'en la vista hay un registro en la tabla.
        'Fecha       :    20 de Noviembre del 2018.
        'Autor       :    Jorge López Jiménez.
        'Tipo Doc    :    Primera Documentación.
        'Ubicación   :    Form1.vb.
        'Tipo Objeto :    Procedimiento Enviar tiquetes, se llama cuando carga la forma 
        '            :    y en el timer1 cada 60 segundos para transmitir los tiquetes
        '            :    por primera vez.  
        'Nombre      :    Form1.vb.
        'Base        :    LDCOM_MUNDOMAGICO.
        'Tablas      :    vw_FE_Control, GB_Control_FE

        Using client = New HttpClient()

            Dim claveValor As String = ""

            Try
                'Empieza a crear el header con la dirección local
                client.BaseAddress = New Uri("http://localhost:8080/easy-atv/api/")
                client.DefaultRequestHeaders.Add("X-KeyLicense", "KPsAaW8n3txLJsGL")
                client.DefaultRequestHeaders.Add("X-Disable-Cache", "true")
                client.DefaultRequestHeaders.Add("X-Validate-Xml", "false")

                Dim header As String
                header = "<?xml version=""1.0"" encoding=""utf-8""?>" & vbCr
                header += "<TiqueteElectronico xmlns:ds=""http://www.w3.org/2000/09/xmldsig#""" & vbCr
                header += "xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""" & vbCr
                header += "xmlns=""https://tribunet.hacienda.go.cr/docs/esquemas/2017/v4.2/tiqueteElectronico""" & vbCr
                header += "xsi:schemaLocation=""https://tribunet.hacienda.go.cr/docs/esquemas/2017/v4.2/tiqueteElectronico https://tribunet.hacienda.go.cr/docs/esquemas/2017/v4.2/tiqueteElectronico.xsd"">" & vbCr

                'Selecciona todos los tiquetes que va a transmitir por primera vez.
                strSQL = "SELECT Consecutivo_FE, Clave_Unica_FE, Fecha_Factura, ATV_Usuario, ATV_Password, Certificado, Certificado_Password FROM vw_FE_Control WHERE TipoDoc_Id = 1 and estado = 0 and status_code is null and Clave_Unica_FE is not null ORDER BY Consecutivo_FE"
                Dim dsXML As DataSet = funFillDataSet(strSQL)
                Dim cantidadTiquetes As Integer
                cantidadTiquetes = dsXML.Tables("Tabla").Rows.Count

                'Si no hay tiquetes para transmitir se sale del procedimiento
                If (cantidadTiquetes = 0) Then
                    Exit Sub
                End If

                'Modifica la tabla GB_Control_FE con estado = 1, con esto lo marcamos para transmisión
                strSQL = "UPDATE GB_Control_FE set Estado = 1 WHERE TipoDoc_Id = 1 and estado = 0 and status_code is null and Clave_Unica_FE is not null"
                funRunSQL(strSQL)

                Dim atvUsername As String
                Dim atvPassword As String
                Dim certificateLocation As String
                Dim certificatePassword As String

                For index As Integer = 0 To cantidadTiquetes - 1

                    wait(1)
                    atvUsername = dsXML.Tables("Tabla").Rows(index)("ATV_Usuario")
                    atvPassword = dsXML.Tables("Tabla").Rows(index)("ATV_Password")
                    certificateLocation = dsXML.Tables("Tabla").Rows(index)("Certificado")
                    certificatePassword = dsXML.Tables("Tabla").Rows(index)("Certificado_Password")
                    claveValor = dsXML.Tables("Tabla").Rows(index)("Clave_Unica_FE")

                    'Toma de la vista vw_FE_Tiquetes el valor de la clave que encontro en la vista vw_FE_Control
                    'Aquí se encuentra el detalle de los artículos, varios registros por factura
                    'La vista vw_FE_Control tiene el encabezado de la factura y vw_FE_Tiquetes el detalle
                    strSQL = "SELECT * FROM vw_FE_Tiquetes WHERE Clave_Unica_FE = '" & claveValor & "'"
                    Dim dsDetalle As DataSet = funFillDataSet(strSQL)

                    If (dsDetalle.Tables("Tabla").Rows.Count = 0) Then
                        'No encontro la clave para este registro
                    Else
                        'Encuentra la clave en la vista vw_FE_Tiquetes
                        Dim consecutivoValor As String = dsXML.Tables("Tabla").Rows(index)("Consecutivo_FE")
                        Dim fechaEmisionValor As String
                        Dim fPathTMP = "D:\EasyATV\XML_Te\" & claveValor & "TMP" & ".xml"
                        Dim afileTMP As New IO.StreamWriter(fPathTMP, False)
                        'Escribe en el archivo las variables atvUsername, atvPassword ......
                        afileTMP.WriteLine(dsXML.GetXml())
                        afileTMP.Close()
                        Dim xmlTMP As Xml.XmlDocument = New Xml.XmlDocument()
                        xmlTMP.Load(fPathTMP)
                        'Toma la fecha de la factura del XML que acaba de esribir en D:\EasyATV\XML_Te\
                        fechaEmisionValor = xmlTMP.GetElementsByTagName("Fecha_Factura").Item(index).InnerText
                        'Toma otros valores de vw_FE_Tiquetes
                        Dim emisorNombreValor As String = dsDetalle.Tables("Tabla").Rows(0)("Nombre")
                        Dim emisorNombreComercialValor As String = dsDetalle.Tables("Tabla").Rows(0)("NombreComercial")
                        Dim condicionVentaValor As String = dsDetalle.Tables("Tabla").Rows(0)("CondicionVenta")
                        Dim medioPagoValor As String = dsDetalle.Tables("Tabla").Rows(0)("MedioPago")
                        Dim emisorCorreoElectronicoValor As String = dsDetalle.Tables("Tabla").Rows(0)("CorreoElectronico")
                        Dim tipo As String = dsDetalle.Tables("Tabla").Rows(0)("Tipo")
                        Dim numero As String = dsDetalle.Tables("Tabla").Rows(0)("Numero")
                        Dim provincia As String = dsDetalle.Tables("Tabla").Rows(0)("Provincia")
                        Dim canton As String = dsDetalle.Tables("Tabla").Rows(0)("Canton")
                        Dim distrito As String = dsDetalle.Tables("Tabla").Rows(0)("Distrito")
                        Dim barrio As String = dsDetalle.Tables("Tabla").Rows(0)("Barrio")
                        Dim otrasSenas As String = dsDetalle.Tables("Tabla").Rows(0)("OtrasSenas")
                        Dim codigoPais As String = dsDetalle.Tables("Tabla").Rows(0)("CodigoPais")
                        Dim numeroTelefono As String = dsDetalle.Tables("Tabla").Rows(0)("NumTelefono")
                        Dim codigoPaisFax As String = dsDetalle.Tables("Tabla").Rows(0)("CodigoPaisFax")
                        Dim numeroTelefonoFax As String = dsDetalle.Tables("Tabla").Rows(0)("NumTelefonoFax")

                        'Empieza a escribir el XML en las variables
                        Dim clave As String = " <Clave>" & claveValor & "</Clave>" & vbCr
                        Dim consecutivo As String = "   <NumeroConsecutivo>" & consecutivoValor & "</NumeroConsecutivo>" & vbCr
                        Dim fechaEmision As String = "  <FechaEmision>" & fechaEmisionValor & "</FechaEmision>" & vbCr
                        'El emisor está formado por estos campos
                        Dim emisor As String = ""
                        emisor += "    <Emisor>" & vbCr
                        emisor += "     <Nombre>" & emisorNombreValor & "</Nombre>" & vbCr
                        emisor += "     <Identificacion>" & vbCr
                        emisor += "         <Tipo>" & tipo & "</Tipo>" & vbCr
                        emisor += "         <Numero>" & numero & "</Numero>" & vbCr
                        emisor += "     </Identificacion>" & vbCr
                        emisor += "     <NombreComercial>" & emisorNombreComercialValor & "</NombreComercial>" & vbCr
                        emisor += "     <Ubicacion>" & vbCr
                        emisor += "         <Provincia>" & provincia & "</Provincia>" & vbCr
                        emisor += "         <Canton>" & canton & "</Canton>" & vbCr
                        emisor += "         <Distrito>" & distrito & "</Distrito>" & vbCr
                        emisor += "         <Barrio>" & barrio & "</Barrio>" & vbCr
                        emisor += "         <OtrasSenas>" & otrasSenas & "</OtrasSenas>" & vbCr
                        emisor += "     </Ubicacion>" & vbCr
                        emisor += "     <Telefono>" & vbCr
                        emisor += "         <CodigoPais>" & codigoPais & "</CodigoPais>" & vbCr
                        emisor += "         <NumTelefono>" & numeroTelefono & "</NumTelefono>" & vbCr
                        emisor += "     </Telefono>" & vbCr
                        emisor += "     <Fax>" & vbCr
                        emisor += "         <CodigoPais>" & codigoPaisFax & "</CodigoPais>" & vbCr
                        emisor += "         <NumTelefono>" & numeroTelefonoFax & "</NumTelefono>" & vbCr
                        emisor += "     </Fax>" & vbCr
                        emisor += "     <CorreoElectronico>" & emisorCorreoElectronicoValor & "</CorreoElectronico>" & vbCr
                        emisor += " </Emisor>" & vbCr

                        Dim condicionVenta As String = "  <CondicionVenta>" & condicionVentaValor & "</CondicionVenta>" & vbCr
                        Dim medioPago As String = "  <MedioPago>" & medioPagoValor & "</MedioPago>" & vbCr

                        Dim detalle As String
                        detalle = " <DetalleServicio>" & vbCr
                        'Recorre la vista vw_FE_Tiquetes donde está el detalle de la factura
                        For i As Integer = 0 To dsDetalle.Tables("Tabla").Rows.Count - 1
                            Dim codigoTipo As String = dsDetalle.Tables("Tabla").Rows(i)("TipoCodigo")
                            Dim codigoCodigo As String = dsDetalle.Tables("Tabla").Rows(i)("Codigo")
                            Dim impuestoCodigo As String = dsDetalle.Tables("Tabla").Rows(i)("CodigoImpuesto")
                            Dim impuestoTarifa As String = dsDetalle.Tables("Tabla").Rows(i)("TarifaImpuesto")
                            Dim cantidad As Double = dsDetalle.Tables("Tabla").Rows(i)("Cantidad")
                            Dim unidadMedida As String = dsDetalle.Tables("Tabla").Rows(i)("UnidadMedida")
                            Dim detalleValor As String = dsDetalle.Tables("Tabla").Rows(i)("Detalle")
                            Dim precioUnitario As Double = dsDetalle.Tables("Tabla").Rows(i)("PrecioUnitario")
                            Dim montoTotal As Double = dsDetalle.Tables("Tabla").Rows(i)("MontoTotal")
                            Dim montoImpuesto As Double = dsDetalle.Tables("Tabla").Rows(i)("MontoImpuesto")
                            Dim montoDescuento As Double = dsDetalle.Tables("Tabla").Rows(i)("MontoDescuento")
                            Dim naturalezaDescuento As String = dsDetalle.Tables("Tabla").Rows(i)("NaturalezaDescuento")
                            Dim subTotal As Double = dsDetalle.Tables("Tabla").Rows(i)("SubTotal")
                            Dim montoTotalLinea As Double = dsDetalle.Tables("Tabla").Rows(i)("MontoTotalLinea")

                            detalle += "        <LineaDetalle>" & vbCr
                            detalle += "            <NumeroLinea>" & i + 1 & "</NumeroLinea>" & vbCr
                            detalle += "            <Codigo>" & vbCr
                            detalle += "                <Tipo>" & codigoTipo & "</Tipo>" & vbCr
                            detalle += "                <Codigo>" & codigoCodigo & "</Codigo>" & vbCr
                            detalle += "            </Codigo>" & vbCr
                            detalle += "            <Cantidad>" & cantidad & "</Cantidad>" & vbCr
                            detalle += "            <UnidadMedida>" & unidadMedida & "</UnidadMedida>" & vbCr
                            detalle += "            <Detalle>" & detalleValor.Replace("&", " ") & "</Detalle>" & vbCr
                            detalle += "            <PrecioUnitario>" & precioUnitario & "</PrecioUnitario>" & vbCr
                            detalle += "            <MontoTotal>" & montoTotal & "</MontoTotal>" & vbCr
                            detalle += "            <MontoDescuento>" & montoDescuento & "</MontoDescuento>" & vbCr
                            detalle += "            <NaturalezaDescuento>" & naturalezaDescuento & "</NaturalezaDescuento>" & vbCr
                            detalle += "            <SubTotal>" & subTotal & "</SubTotal>" & vbCr
                            detalle += "            <Impuesto>" & vbCr
                            detalle += "                <Codigo>" & impuestoCodigo & "</Codigo>" & vbCr
                            detalle += "                <Tarifa>" & impuestoTarifa & "</Tarifa>" & vbCr
                            detalle += "                <Monto>" & montoImpuesto & "</Monto>" & vbCr
                            detalle += "            </Impuesto>" & vbCr
                            detalle += "            <MontoTotalLinea>" & montoTotalLinea & "</MontoTotalLinea>" & vbCr
                            detalle += "        </LineaDetalle>" & vbCr
                        Next

                        'Escribe en detalle todos los artículos que se compraron
                        detalle += " </DetalleServicio>" & vbCr
                        'Escribe resumen de la factura
                        Dim resumen As String
                        resumen = " <ResumenFactura>" & vbCr
                        resumen += "        <CodigoMoneda>" & dsDetalle.Tables("Tabla").Rows(0)("CodigoMoneda") & "</CodigoMoneda>" & vbCr
                        resumen += "        <TipoCambio>" & dsDetalle.Tables("Tabla").Rows(0)("TipoCambio") & "</TipoCambio>" & vbCr
                        resumen += "        <TotalServGravados>" & dsDetalle.Tables("Tabla").Rows(0)("TotalServGravados") & "</TotalServGravados>" & vbCr
                        resumen += "        <TotalServExentos>" & dsDetalle.Tables("Tabla").Rows(0)("TotalServExentos") & "</TotalServExentos>" & vbCr
                        resumen += "        <TotalMercanciasGravadas>" & dsDetalle.Tables("Tabla").Rows(0)("TotalMercanciasGravadas") & "</TotalMercanciasGravadas>" & vbCr
                        resumen += "        <TotalMercanciasExentas>" & dsDetalle.Tables("Tabla").Rows(0)("TotalMercanciasExentas") & "</TotalMercanciasExentas>" & vbCr
                        resumen += "        <TotalGravado>" & dsDetalle.Tables("Tabla").Rows(0)("TotalGravado") & "</TotalGravado>" & vbCr
                        resumen += "        <TotalExento>" & dsDetalle.Tables("Tabla").Rows(0)("TotalExento") & "</TotalExento>" & vbCr
                        resumen += "        <TotalVenta>" & dsDetalle.Tables("Tabla").Rows(0)("TotalVenta") & "</TotalVenta>" & vbCr
                        resumen += "        <TotalDescuentos>" & dsDetalle.Tables("Tabla").Rows(0)("TotalDescuentos") & "</TotalDescuentos>" & vbCr
                        resumen += "        <TotalVentaNeta>" & dsDetalle.Tables("Tabla").Rows(0)("TotalVentaNeta") & "</TotalVentaNeta>" & vbCr
                        resumen += "        <TotalImpuesto>" & dsDetalle.Tables("Tabla").Rows(0)("TotalImpuesto") & "</TotalImpuesto>" & vbCr
                        resumen += "        <TotalComprobante>" & dsDetalle.Tables("Tabla").Rows(0)("TotalComprobante") & "</TotalComprobante>" & vbCr
                        resumen += "    </ResumenFactura>" & vbCr

                        'Escribe la normativa
                        Dim normativa As String
                        normativa = "   <Normativa>" & vbCr
                        normativa += "      <NumeroResolucion>" & "DGT-R-48-2016" & "</NumeroResolucion>" & vbCr
                        normativa += "      <FechaResolucion>" & "07-10-2016 08:00:00" & "</FechaResolucion>" & vbCr
                        normativa += "  </Normativa>" & vbCr

                        Dim otros As String

                        otros = "   <Otros>" & vbCr
                        otros += "       <OtroTexto></OtroTexto>" & vbCr
                        otros += "  </Otros>" & vbCr

                        Dim footer As String = "</TiqueteElectronico>"
                        Dim tiqueteXML As String

                        'Escribe el contenido del XML en la variable tiqueteXML
                        tiqueteXML = header + clave + consecutivo + fechaEmision + emisor + condicionVenta + medioPago + detalle + resumen + normativa + otros + footer
                        'Escribe en el archivo el XML
                        Dim fPath = "D:\EasyATV\XML_Te\" & claveValor & ".xml"
                        Dim afile As New IO.StreamWriter(fPath, False)
                        afile.WriteLine(tiqueteXML)
                        afile.Close()

                        Dim arrayDeBytes As Byte() = System.IO.File.ReadAllBytes(fPath)

                        'Convierte un arreglo de 8-bit de enteros a su equivalente a representación de string
                        'en base de 64 digitos.
                        'Parametros : Arreglo de 8 bits de enteros.                   
                        'Retorna:La representación en string en base a 64 bits en el arreglo.
                        Dim xmlToSignBase64 As String = Convert.ToBase64String(arrayDeBytes)

                        'Lo escribe en formato JSON con la demas informacion
                        Dim json As String = "{""atvUsername"":""" + atvUsername + """, " _
                            & """atvPassword"":""" + atvPassword + """," _
                            & """certificateLocation"":""" + certificateLocation + """, " _
                            & """certificatePassword"":""" + certificatePassword + """, " _
                            & """xmlToSign"":""" _
                            & xmlToSignBase64 _
                            & """}"

                        'Lo transmite al Ministerio de Hacienda
                        Dim response = Await client.PostAsync("atv/recepcion", New StringContent(json, Encoding.UTF8, "application/json"))
                        Dim resultContent As String = Await response.Content.ReadAsStringAsync()
                        'Modifica la tabla de GB_Control_FE, le pone en Status_Code 
                        'la respuesta = 200 Exitoso, 400 no hay conexion con Hacienda
                        'Y resultContent es el resultado de lo que envía Hacienda
                        strSQL = "UPDATE GB_Control_FE set Status_Code = " & response.StatusCode & ", Json = '" & resultContent.Replace("'", "''") & "' WHERE Clave_Unica_FE = '" & claveValor & "'"
                        funRunSQL(strSQL)

                        Dim obj As JSON_result

                        If CInt(response.StatusCode) = 200 Then 'Hay conexión con Hacienda y la respuesta es exitosa
                            Try
                                'Escribe el objeto de respuesta en la tabla GB_Control_FE con la clave correspondiente
                                obj = JsonConvert.DeserializeObject(Of JSON_result)(resultContent)
                                strSQL = "UPDATE GB_Control_FE set Estado = 1, Recepcion_Comprobante = '" & obj.estado & "' WHERE Clave_Unica_FE = '" & claveValor & "'"
                                funRunSQL(strSQL)
                            Catch ex As Exception

                            End Try
                        Else 'Asume que no hay conexión con hacienda con el error 400 o da otro código de error
                            Try
                                'Pone el estado del encabezado de Factura Elctrónica en 0 para procesarla después 
                                strSQL = "UPDATE GB_Control_FE set Estado = 0 WHERE Clave_Unica_FE = '" & claveValor & "'"
                                funRunSQL(strSQL)
                            Catch ex As Exception

                            End Try

                            'No está haciendo nada
                            Try
                            Catch ex As Exception
                            End Try

                        End If

                        'Escribe un archivo en formato JSON en este dirección
                        'en la máquina que se usa facturación D:\EasyATV\Json_Te                        
                        Dim fPathJson = "D:\EasyATV\Json_Te\" & claveValor & "_" & Date.Now.ToString.Replace(":", "")
                        Dim afileJson As New IO.StreamWriter(fPathJson.Replace("/", "").Replace(".", "") & ".json", False)
                        afileJson.WriteLine(resultContent)
                        afileJson.Close()
                    End If

                    MostrarTiquetes()

                Next

                MostrarTiquetes()

            Catch ex As Exception
                'Si algo falla en todo el procedimiento vuelve el estado de la 
                'factura electrónica a 0 para procesar después.

                strSQL = "UPDATE GB_Control_FE set Estado = 0 WHERE Clave_Unica_FE = '" & claveValor & "'"
                funRunSQL(strSQL)
            End Try

        End Using


    End Sub 'Termina procedimiento EnviarTiquetes()


    Private Sub wait(ByVal seconds As Integer)
        For i As Integer = 0 To seconds * 100
            System.Threading.Thread.Sleep(10)
            Application.DoEvents()
        Next
    End Sub







    'El timer2 que se encuentra en el mismo Form1.vb corre cada 60 minutos y toma los  
    'tíquetes que han quedado pendientes de transmitir por algún error por el proceso que se hace en el 
    'timer1 con el estado en la tabla GB_Control_FE = 0.
    'Fecha       :    21 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Form1.vb.
    'Tipo Objeto :    Timer.
    'Nombre      :    Timer2.
    'Base        :    LDCOM_MUNDOMAGICO
    'Tablas      :    vw_FE_Control, GB_Control_FE

    Private Async Sub EstadoRecepcion()

        Using client = New HttpClient()

            Try
                'Llena valores del encabezado de la trama. 
                Dim claveValor As String = ""
                client.BaseAddress = New Uri("http://localhost:8080/easy-atv/api/")
                client.DefaultRequestHeaders.Add("X-KeyLicense", "KPsAaW8n3txLJsGL")

                'Toma los registros del Encabezado de la factura, ya el tiquete se transmitió y falló.
                'Se toma que los valores Tipo Doc y estado = 1 y 
                '(Estado_Recepcion Is null Or (Estado_Recepcion != 'aceptado' AND Estado_Recepcion != 'rechazado'))
                strSQL = "SELECT Estado_Recepcion, Consecutivo_FE, Clave_Unica_FE, Fecha_Factura, ATV_Usuario, ATV_Password, Certificado, Certificado_Password FROM vw_FE_Control WHERE TipoDoc_Id = 1 and estado = 1 and Clave_Unica_FE is not null and (Estado_Recepcion is null OR (Estado_Recepcion != 'aceptado' AND Estado_Recepcion != 'rechazado')) ORDER BY Consecutivo_FE"
                Dim dsXML As DataSet = funFillDataSet(strSQL)
                Dim cantidadTiquetes As Integer
                cantidadTiquetes = dsXML.Tables("Tabla").Rows.Count

                If (cantidadTiquetes = 0) Then 'Si no hay tiquetes que ya se habían transmitido.
                    Exit Sub
                End If

                Dim atvUsername As String
                Dim atvPassword As String
                Dim certificateLocation As String
                Dim certificatePassword As String

                'Por cada Factura Encabezado que tome, toma los valores pricipales de la base de datos
                'y toma los valores de JSON y demás datos del archivo que había escrito en la primer transmisión.
                For index As Integer = 0 To cantidadTiquetes - 1

                    atvUsername = dsXML.Tables("Tabla").Rows(index)("ATV_Usuario")
                    atvPassword = dsXML.Tables("Tabla").Rows(index)("ATV_Password")
                    claveValor = dsXML.Tables("Tabla").Rows(index)("Clave_Unica_FE")

                    Dim json As String = "{""atvUsername"":""" + atvUsername + """, " _
                            & """atvPassword"":""" + atvPassword + "" _
                            & """}"

                    'Transmite a Hacienda
                    Dim response = Await client.PostAsync("atv/recepcion/" & claveValor, New StringContent(json, Encoding.UTF8, "application/json"))
                    Dim resultContent As String = Await response.Content.ReadAsStringAsync()
                    'Modifica los datos de la tabla según los datos que recibe de Hacienda
                    strSQL = "UPDATE GB_Control_FE set Status_Code_Estado_Recepcion = " & response.StatusCode & ", Json_Estado_Recepcion = '" & resultContent.Replace("'", "''") & "' WHERE Clave_Unica_FE = '" & claveValor & "'"
                    funRunSQL(strSQL)

                    Dim obj As JSON_result

                    If CInt(response.StatusCode) = 200 Then 'La respuesta es exitosa
                        Try
                            obj = JsonConvert.DeserializeObject(Of JSON_result)(resultContent)
                            strSQL = "UPDATE GB_Control_FE set Estado_Recepcion = '" & obj.estado & "' WHERE Clave_Unica_FE = '" & claveValor & "'"
                            funRunSQL(strSQL)
                        Catch ex As Exception
                        End Try

                    Else 'La respuesta no es exitosa, puede ser 400 u otro valor.

                        'Hay dos try catch que no hacen nada
                        Try
                        Catch ex As Exception
                        End Try

                        Try
                        Catch ex As Exception
                        End Try

                    End If

                    'Escribe en Json_Estado_Recepcion_Te el archivo
                    Dim fPathJson = "D:\EasyATV\Json_Estado_Recepcion_Te\" & claveValor & "_" & Date.Now.ToString.Replace(":", "")
                    Dim afileJson As New IO.StreamWriter(fPathJson.Replace("/", "").Replace(".", "") & ".json", False)
                    afileJson.WriteLine(resultContent)
                    afileJson.Close()
                Next

                'Muestra los tiquetes
                MostrarTiquetes()
            Catch ex As Exception

            End Try

        End Using
    End Sub


    'El procedimiento de carga de Form1 Muestra datos de tiquetes que se transmiten por primera
    'vez y los pendientes en el Datagrid 1 y 2 y después hace un primer intento de enviar tíquetes
    'antes de que corra el timer1 que corre al minuto de iniciado el programa.
    'Antes de hacer esto pone los DataGrid en modo de lectura para que el usuario no puede leer  
    'ni eliminar datos directamente en los DataGrid.
    'Fecha       :    19 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Form1.vb.
    'Tipo Objeto :    Procedimiento Carga de Form1.
    'Nombre      :    Form1.vb.
    'Base        :    LDCOM_MUNDOMAGICO.
    'Tablas      :    Ninguna

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Me.DataGridView1.ReadOnly = True                'Pone el DataGrid solo de lectura para que no se modifiquen datos
        Me.DataGridView1.AllowUserToAddRows = False     'Deshabilita Agregar datos al DataGrid
        Me.DataGridView1.AllowUserToDeleteRows = False  'Deshabilita eliminar datos del DataGrid
        Me.DataGridView2.ReadOnly = True                'Pone el DataGrid2 solo de lectura para que no se modifiquen datos
        Me.DataGridView2.AllowUserToAddRows = False     'Deshabilita Agregar datos al DataGrid2
        Me.DataGridView2.AllowUserToDeleteRows = False  'Deshabilita Eliminar datos al DataGrid2
        Me.SetBounds(1, 1, 1300, 600)                   'Pone la forma Form1.vbp en una forma centrada en la pantalla
        MostrarTiquetes()                               'Muestra los tiquetes a enviar en el DataGrid1
        MostrarTiquetesEnviado()                        'Muestra los tiquetes que están pendientes en el DataGrid2 
        EnviarTiquetes()                                'Envía tíquetes que está leyendo y no estaban pendientes a Hacienda

    End Sub


    'Este procedimiento toma los tiquetes pendientes por primera vez. 
    'Muestra los tiquetes en el DataGrid1.
    'Los datos los toma de la vista vw_FE_Control que toma los datos de una tabla de Producción de la base de
    'datos LDCOM_MUNDOMAGICO que es la base de datos de LDCOM.
    'Las condiciones que busca en la tabla es : 
    'TipoDoc_Id = 1, estado = 0,status_code Is null,Clave_Unica_FE Is Not null.
    'Fecha       :    19 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Form1.vb.
    'Tipo Objeto :    Timer1.
    'Nombre      :    Form1.vb.
    'Base        :    LDCOM_MUNDOMAGICO.
    'Tablas      :    vw_FE_Control.  

    Private Sub MostrarTiquetes()
        Dim ds As DataSet
        strSQL = "SELECT Consecutivo_FE, Clave_Unica_FE, Fecha_Factura, Recepcion_Comprobante, Estado_Recepcion FROM vw_FE_Control WHERE TipoDoc_Id = 1 and estado = 0 and status_code is null and Clave_Unica_FE is not null ORDER BY Consecutivo_FE"
        ds = funFillDataSet(strSQL)
        Me.DataGridView1.DataSource = ds.Tables("Tabla")
    End Sub


    'Este procedimiento toma los tiquetes que fallaron en su transmisión al Ministerio. 
    'Muestra los tiquetes en el DataGrid1.
    'Los datos los toma de la vista vw_FE_Control que toma los datos de una tabla de Producción de la base de
    'datos LDCOM_MUNDOMAGICO que es la base de datos de LDCOM.
    'Las condiciones que busca en la tabla es : 
    'TipoDoc_Id = 1, estado = 1,status_code Is null,CAST(Fecha_Factura AS DATE) = CAST(GETDATE().
    'La diferencia con los tiquetes nuevos es que pide el status_code = 1 y la fecha igual a la fecha de hoy.
    'Fecha       :    19 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Form1.vb.
    'Tipo Objeto :    Timer1.
    'Nombre      :    Form1.vb.
    'Base        :    LDCOM_MUNDOMAGICO.
    'Tablas      :    vw_FE_Control.    

    Private Sub MostrarTiquetesEnviado()
        Dim ds As DataSet
        strSQL = "SELECT Consecutivo_FE, Clave_Unica_FE, Fecha_Factura, Recepcion_Comprobante, Estado_Recepcion FROM vw_FE_Control WHERE TipoDoc_Id = 1 and estado = 1 AND CAST(Fecha_Factura AS DATE) = CAST(GETDATE() AS DATE) ORDER BY Consecutivo_FE"
        ds = funFillDataSet(strSQL)
        Me.DataGridView2.DataSource = ds.Tables("Tabla")
    End Sub


    'Revisa los tiquetes que ya se han transmitido pero que
    'han sido rechazados, toma de los archivos las causas de rechazo 
    'y actualiza la base de datos, sobre todo la tabla GB_Control_FE que lleva 
    'el encabezado de los tiquetes.
    'Fecha         :    24 de Noviembre del 2018.
    'Autor         :    Jorge López Jiménez.
    'Tipo Doc      :    Primera Documentación.
    'Ubicación     :    Form1.vb.
    'Tipo Objeto   :    Procedimiento a nivel de forma.     
    'Procedimiento :    Privado Sub. 
    'Nombre        :    TiquetesRechazados
    'Base          :    LDCOM_MUNDOMAGICO.
    'Tablas        :    GB_Control_FE.

    Private Sub TiquetesRechazados()

        Dim obj As JSON_result

        strSQL = "SELECT Json_Estado_Recepcion, Clave_Unica_FE FROM GB_Control_FE WHERE TipoDoc_Id = 1 and Estado_Recepcion = 'rechazado' AND Json_Estado_Recepcion like '%rechazado%'"
        Dim ds As DataSet = funFillDataSet(strSQL)

        For i As Integer = 0 To ds.Tables("Tabla").Rows.Count - 1
            obj = JsonConvert.DeserializeObject(Of JSON_result)(ds.Tables("Tabla").Rows(i)("Json_Estado_Recepcion"))

            Dim base64 = obj.resultXml
            'Dim base64 = ""
            Dim xmlFromBase64 As Byte()
            xmlFromBase64 = Convert.FromBase64String(base64)

            Dim xml As String = System.Text.Encoding.UTF8.GetString(xmlFromBase64, 0, xmlFromBase64.Length)

            Dim fPathTMP = "D:\EasyATV\XML_Te\" & "MensajeRechazo_" & "TMP" & ".xml"
            Dim afileTMP As New IO.StreamWriter(fPathTMP, False)
            afileTMP.WriteLine(xml)
            afileTMP.Close()

            Dim xmlTMP As Xml.XmlDocument = New Xml.XmlDocument()
            xmlTMP.Load(fPathTMP)

            Dim DetalleMensaje As String = xmlTMP.GetElementsByTagName("DetalleMensaje").Item(0).InnerText

            strSQL = "UPDATE GB_Control_FE SET Detalle_Mensaje_Rechazo = '" & DetalleMensaje.Replace("'", "") & "' WHERE Clave_Unica_FE = '" & ds.Tables("Tabla").Rows(i)("Clave_Unica_FE").ToString & "'"
            funRunSQL(strSQL)

        Next

        MsgBox("Proceso ha finalizado!", MsgBoxStyle.Information)

    End Sub

    'Este timer corre cada 60 segundos.
    'La secuencia primero Muestra los tiquetes que no han sido enviados en el DataGrid.
    'Después muestra los tiquetes que va a enviar en el DataGrid2.
    'Después envia los tíquetes al Ministerio de Hacienda. 
    'El timer corre cada 60 segundos y si el tiquete falla queda en estado pendiente.
    'El timer2 que se encuentra en el mismo Form1.vb corre cada 60 minutos y toma los  
    'tíquetes que han quedado pendientes de transmitir por el proceso que se hace en el 
    'timer1. 
    'Fecha       :    18 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Form1.vb.
    'Tipo Objeto :    Timer.
    'Nombre      :    Timer1.
    'Base        :    LDCOM_MUNDOMAGICO

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        MostrarTiquetes()            'Mostrar en Datagrid1 tiquetes que se envían por primera vez.
        MostrarTiquetesEnviado()     'Mostrar en DataGrid2 tiquetes que estaban pendientes porque habían fallado.  
        EnviarTiquetes()             'Transmitir Tiquetes.
    End Sub


    'El timer2 que se encuentra en el mismo Form1.vb corre cada 60 minutos y toma los  
    'tíquetes que han quedado pendientes de transmitir por algún error por el proceso que se hace en el 
    'timer1. 
    'Fecha       :    21 de Noviembre del 2018.
    'Autor       :    Jorge López Jiménez.
    'Tipo Doc    :    Primera Documentación.
    'Ubicación   :    Form1.vb.
    'Tipo Objeto :    Timer.
    'Nombre      :    Timer2.
    'Base        :    LDCOM_MUNDOMAGICO
    'Tablas      :    vw_FE_Control, GB_Control_FE

    Private Sub Timer2_Tick(sender As Object, e As EventArgs) Handles Timer2.Tick
        EstadoRecepcion()
    End Sub


    'Llama el procedimiento de TiquetesRechazados
    'para actualizar la base de datos con 
    'las razones de rechazo de Hacienda
    'de los archivos hcia la base de datos.
    'Fecha         :    21 de Noviembre del 2018.
    'Autor         :    Jorge López Jiménez.
    'Tipo Doc      :    Primera Documentación.
    'Ubicación     :    Botón btnMensajeRechazados en forma Form1.vb.
    'Tipo Objeto   :    Botón.
    'Nombre        :    btnMensajeRechazados.
    'Procedimiento :    Click en btnMensajeRechazados.
    'Base          :    LDCOM_MUNDOMAGICO.
    'Tablas        :    Ninguno.

    Private Sub btnMensajeRechazados_Click(sender As Object, e As EventArgs) Handles btnMensajeRechazados.Click
        TiquetesRechazados()
    End Sub

    'Se sale del form pero le advierte al cliente que se pueden 
    'perder datos ya que puede estar procesando datos hacia Hacienda.
    'El usuario escoge si se sale puede dejar datos no transmitidos 
    'o en un estado corrupto.
    'Fecha         :    21 de Noviembre del 2018.
    'Autor         :    Jorge López Jiménez.
    'Tipo Doc      :    Primera Documentación.
    'Ubicación     :    Form1.vb.
    'Tipo Objeto   :    Forma.
    'Nombre        :    Form1.
    'Procedimiento :    Salir del Form.
    'Base          :    LDCOM_MUNDOMAGICO.
    'Tablas        :    Ninguno.

    Private Sub frmMain_FormClosing(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles Me.FormClosing
        If MsgBox("¿Desea cerrar la aplicación? " & vbCr _
                  & "Advertencia: al cerrar la aplicación se detiene el proceso y es posible que se pierdan datos!", MsgBoxStyle.YesNo + MsgBoxStyle.Question, "Cerrar la aplicación") = MsgBoxResult.No Then
            e.Cancel = True
        End If
    End Sub


    'Hace los mismo que el timer2 cada hora
    'corre el procedimiento EstadoRecepcion() que intenta
    'transmitir los tíquetes que no se habían podido transmitir
    'la primera vez.
    'Fecha         :    26 de Noviembre del 2018.
    'Autor         :    Jorge López Jiménez.
    'Tipo Doc      :    Primera Documentación.
    'Ubicación     :    Form1.vb.
    'Tipo Objeto   :    Botón.
    'Nombre        :    btnVerificarEstado.
    'Procedimiento :    Corre el procedimiento EstadoRecepcion().
    'Base          :    LDCOM_MUNDOMAGICO.
    'Tablas        :    Ninguno.
    Private Sub btnVerificarEstado_Click(sender As Object, e As EventArgs) Handles btnVerificarEstado.Click
        lblVerificarEstado.Text = "Verificando..."
        MsgBox("Verificando...", MsgBoxStyle.Information)
        EstadoRecepcion()
        lblVerificarEstado.Text = "..."
    End Sub


End Class
